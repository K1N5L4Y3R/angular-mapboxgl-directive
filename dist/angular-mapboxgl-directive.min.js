/*!
*  angular-mapboxgl-directive 0.1.0 2016-08-30
*  An AngularJS directive for Mapbox GL
*  git: git+https://github.com/Naimikan/angular-mapboxgl-directive.git
*/
!function(a,b,c){"use strict";a.module("mapboxgl-directive",[]).directive("mapboxgl",["$q","mapboxglUtils","mapboxglConstants",function(c,d,e){function f(a){this._mapboxGlMap=c.defer(),this.getMap=function(){return this._mapboxGlMap.promise},this.getMapboxGlScope=function(){return a}}function g(c,f,g,h){if(!b)throw new Error("Mapbox GL does not included");if(!b.accessToken)throw new Error("Mapbox access token does not defined");if(!b.supported())throw new Error("Your browser does not support Mapbox GL");c.mapboxglMapId=g.id?g.id:d.generateMapId(),f.attr("id",c.mapboxglMapId);var i=function(){isNaN(g.width)?f.css("width",g.width):f.css("width",g.width+"px")},j=function(){isNaN(g.height)?f.css("height",g.height):f.css("height",g.height+"px")};a.isDefined(g.width)&&(i(),c.$watch(function(){return f[0].getAttribute("width")},function(){i()})),a.isDefined(g.height)&&(j(),c.$watch(function(){return f[0].getAttribute("height")},function(){j()}));var k=new b.Map({container:c.mapboxglMapId,style:e.defaultStyle,center:e.defaultCenter,interactive:c.isInteractive||!0});h._mapboxGlMap.resolve(k),c.$on("$destroy",function(){k.remove()})}var h={restrict:"EA",replace:!0,scope:{glStyle:"=",glCenter:"=",glMinZoom:"=",glMaxZoom:"=",glZoom:"=",glBearing:"=",glPitch:"=",glControls:"=",glFilter:"=",glClasses:"=",isInteractive:"="},transclude:!0,template:'<div class="angular-mapboxgl-map"><div ng-transclude></div></div>',controller:f,link:g};return f.$inject=["$scope"],h}]),a.module("mapboxgl-directive").factory("mapboxglUtils",[function(){function b(){return"mapbox-gl-map-"+Date.now()}function c(b){var c=null;if(a.isDefined(b)){if(a.isNumber(b.lat)&&a.isNumber(b.lng)&&(b.lng>-180||b.lng<180)&&(b.lat>-90||b.lat<90))c=[b.lng,b.lat];else{if(!(a.isArray(b)&&2===b.length&&a.isNumber(b[0])&&a.isNumber(b[1])&&(b[0]>-180||b[0]<180)&&(b[1]>-90||b[1]<90)))return!1;c=b}return c}return!1}var d={generateMapId:b,validateAndFormatCenter:c};return d}]),a.module("mapboxgl-directive").constant("mapboxglConstants",{defaultStyle:"mapbox://styles/mapbox/streets-v9",defaultCenter:[0,0]}),a.module("mapboxgl-directive").directive("glBearing",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glBearing",function(c){if(!a.isNumber(c))throw new Error("Invalid bearing");b.setBearing(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glCenter",["mapboxglUtils",function(a){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glCenter",function(c){if(c=a.validateAndFormatCenter(c),!c)throw new Error("Invalid center");b.panTo(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glClasses",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glClasses",function(c){if(a.isDefined(c))a.isArray(c)&&b.setClasses(c);else{var d=b.getClasses();d.map(function(a){b.removeClass(a)})}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glControls",[function(){function c(c,d,e,f){if(!f)throw new Error("Invalid angular-mapboxgl-directive controller");var g=f.getMapboxGlScope(),h={};f.getMap().then(function(c){g.$watch("glControls",function(d){a.isDefined(d)&&(a.isDefined(d.navigation)&&a.isDefined(d.navigation.enabled)&&d.navigation.enabled&&(h.navigation=new b.Navigation({position:d.navigation.position||"top-right"}),c.addControl(h.navigation)),a.isDefined(d.scale)&&a.isDefined(d.scale.enabled)&&d.scale.enabled&&(h.scale=new b.Scale({position:d.scale.position||"bottom-left"}),c.addControl(h.scale)),a.isDefined(d.attribution)&&a.isDefined(d.attribution.enabled)&&d.attribution.enabled&&(h.attribution=new b.Attribution({position:d.attribution.position||"bottom-right"}),c.addControl(h.attribution)),a.isDefined(d.geolocate)&&a.isDefined(d.geolocate.enabled)&&d.geolocate.enabled&&(h.geolocate=new b.Geolocate({position:d.geolocate.position||"top-left"}),c.addControl(h.geolocate)))},!0)})}var d={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:c};return d}]),a.module("mapboxgl-directive").directive("glFilter",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glFilter",function(c){if(a.isDefined(c))if(Object.prototype.toString.call(c)===Object.prototype.toString.call({})){if(!(a.isDefined(c.layerId)&&a.isDefined(c.filter)&&a.isArray(c.filter)))throw new Error("Invalid filter parameter");b.setFilter(c.layerId,c.filter)}else{if(Object.prototype.toString.call(c)!==Object.prototype.toString.call([]))throw new Error("Invalid filter parameter");c.map(function(c){if(!(a.isDefined(c.layerId)&&a.isDefined(c.filter)&&a.isArray(c.filter)))throw new Error("Invalid filter parameter");b.setFilter(c.layerId,c.filter)})}},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMaxBounds",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMaxBounds",function(c){if(!a.isArray(c)||2!==c.length)throw new Error("Invalid max bounds");b.setMaxBounds(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMaxZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMaxZoom",function(c){if(!a.isNumber(c)||!(c>=0||c<=20))throw new Error("Invalid max zoom");b.setMaxZoom(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glMinZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glMinZoom",function(c){if(!a.isNumber(c)||!(c>=0||c<=20))throw new Error("Invalid min zoom");b.setMinZoom(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glPitch",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glPitch",function(c){if(!a.isNumber(c)||!(c>=0||c<=60))throw new Error("Invalid pitch");b.setPitch(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}]),a.module("mapboxgl-directive").directive("glStyle",[function(){function a(a,b,c,d){if(!d)throw new Error("Invalid angular-mapboxgl-directive controller");var e=d.getMapboxGlScope();d.getMap().then(function(a){e.$watch("glStyle",function(b){a.setStyle(b)},!0)})}var b={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:a};return b}]),a.module("mapboxgl-directive").directive("glZoom",[function(){function b(b,c,d,e){if(!e)throw new Error("Invalid angular-mapboxgl-directive controller");var f=e.getMapboxGlScope();e.getMap().then(function(b){f.$watch("glZoom",function(c){if(!a.isNumber(c)||!(c>=0||c<=20))throw new Error("Invalid zoom");b.setZoom(c)},!0)})}var c={restrict:"A",scope:!1,replace:!1,require:"?^mapboxgl",link:b};return c}])}(angular,mapboxgl);